import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    productFlavors {
        free {
            applicationId "com.udacity.gradle.builditbigger.free"
            buildConfigField "boolean", "FREE_VERSION", "true"
        }
        paid {
            applicationId "com.udacity.gradle.builditbigger"
            buildConfigField "boolean", "FREE_VERSION", "false"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Added for AdMob
    compile project(':displayjokelib')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.google.android.gms:play-services:8.3.0'
    compile 'com.android.support:multidex:1.0.1'
    freeCompile 'com.google.android.gms:play-services-ads:8.3.0'
    testCompile 'junit:junit:4.12'
    compile project(path: ':backend', configuration: 'android-endpoints')
}


def currentTimeDate = generateBuildTime()

def generateBuildTime() {
    def df = new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss")
    df.setTimeZone(TimeZone.getTimeZone("GMT"))
    return df.format(new Date())
}

task myAwesomeTask (dependsOn:
        [":backend:appengineRun",
         ":app:connectedAndroidTest",
         ":backend:appengineStop"]) {

    evaluationDependsOn ":backend"

    project(":backend") {
        appengine {
            daemon true
        }
    }

    group 'Where all the awesome tasks are'
    description 'Starts up the GCE local server, runs all unit tests and then shuts down the GCE'

    doFirst{
        clean
    }
} << {println "Finished at $currentTimeDate GMT"}













































